{"ast":null,"code":"var _objectAssign = /*#__PURE__*/require(\"./internal/_objectAssign\");\n\nvar _curry2 = /*#__PURE__*/require(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = merge;","map":{"version":3,"sources":["/home/rafael/project/ReactJs/star-photos/node_modules/ramda/src/merge.js"],"names":["_objectAssign","require","_curry2","merge","l","r","module","exports"],"mappings":"AAAA,IAAIA,aAAa,GACjB,aACAC,OAAO,CAAC,0BAAD,CAFP;;AAIA,IAAIC,OAAO,GACX,aACAD,OAAO,CAAC,oBAAD,CAFP;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIE,KAAK,GACT,aACAD,OAAO,CAAC,SAASC,KAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqB;AAC3B,SAAOL,aAAa,CAAC,EAAD,EAAKI,CAAL,EAAQC,CAAR,CAApB;AACD,CAFM,CAFP;;AAMAC,MAAM,CAACC,OAAP,GAAiBJ,KAAjB","sourcesContent":["var _objectAssign =\n/*#__PURE__*/\nrequire(\"./internal/_objectAssign\");\n\nvar _curry2 =\n/*#__PURE__*/\nrequire(\"./internal/_curry2\");\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nmodule.exports = merge;"]},"metadata":{},"sourceType":"script"}